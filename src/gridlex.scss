/* ==========================================================================
    GRIDLEX
    Just a Flexbox Grid System
========================================================================== */
@import "gridlex-vars";

.#{$gl-gridName},
[class*="#{$gl-gridName}-"] {
    box-sizing: border-box;
    display: flex;
    flex-flow: row wrap;
    margin: 0 (-$gl-gutter/2);
}

.#{$gl-colName},
[class*="#{$gl-colName}-"] {
    box-sizing: border-box;
    flex: 0 0 auto;
    padding: 0 ($gl-gutter/2) $gl-col-bottom;
}

.#{$gl-colName} {
    flex: 1 1 0%;
}

.#{$gl-gridName}.#{$gl-colName},
.#{$gl-gridName}[class*="#{$gl-colName}-"] {
    margin: 0;
    padding: 0;
}

/************************
    HELPERS SUFFIXES
*************************/
// FOR GRID
[class*="#{$gl-gridName}-"] {
    // No spacing between cols : noGutter
    &[class*="-noGutter"] {
        margin: 0;
        > [class*="#{$gl-colName}"] {
            padding: 0;
        }
    }

    // Horizontal alignment
    &[class*="-center"] {
        justify-content: center;
    }
    &[class*="-right"] {
        justify-content: flex-end;
        align-self: flex-end;
        margin-left: auto;
    }
    // Vertical alignment
    &[class*="-top"] {
        align-items: flex-start;
    }
    &[class*="-middle"] {
        align-items: center;
    }
    &[class*="-bottom"] {
        align-items: flex-end;
    }

    // Orders
    &[class*="-reverse"] {
        flex-direction: row-reverse;
    }
    &[class*="-column"] {
        flex-direction: column;
        > [class*="#{$gl-colName}-"] {
            flex-basis: auto;
        }
    }
    &[class*="-column-reverse"] {
        flex-direction: column-reverse;
    }

    // Spaces between and around cols
    &[class*="-spaceBetween"] {
        justify-content: space-between;
    }
    &[class*="-spaceAround"] {
        justify-content: space-around;
    }

    // Equal heights columns
    &[class*="-equalHeight"] > [class*="#{$gl-colName}"] {
        display: flex;
    }
    // Removes the padding-bottom
    &[class*="-noBottom"] > [class*="#{$gl-colName}"] {
        padding-bottom: 0;
    }
}

// FOR COL
[class*="#{$gl-colName}-"] {
    &[class*="-top"] {
        align-self: flex-start;
    }
    &[class*="-middle"] {
        align-self: center;
    }
    &[class*="-bottom"] {
        align-self: flex-end;
    }
    &[class*="-first"] {
        order: -1;
    }
    &[class*="-last"] {
        order: 1;
    }
}

/************************
    GRID BY NUMBER
*************************/
@include makeGridByNumber(#{$gl-gridName}, $columns);
/*
@media #{$gl-mq-expanded}{
    @include makeGridByNumber(_#{$gl-vastName}, $columns);
}

@media #{$gl-mq-expanded}{
    @include makeGridByNumber(_#{$gl-expandedName}, $columns);
}

@media #{$gl-mq-large}{
    @include makeGridByNumber(_#{$gl-largeName}, $columns);
}

@media #{$gl-mq-medium}{
    @include makeGridByNumber(_#{$gl-mediumName}, $columns);
}

@media #{$gl-mq-small}{
    @include makeGridByNumber(_#{$gl-smallName}, $columns);
}

@media #{$gl-mq-micro}{
    @include makeGridByNumber(_#{$gl-microName}, $columns);
}*/

/************************
    COLS SIZES
*************************/
@include makeCol(#{$gl-colName}, $columns);
@include makeOff(off, $columns);
/*

@media #{$gl-mq-small}{
    @include makeCol(_xs, $columns);
    @include makeOff(_xs, $columns);
}

@media #{$gl-mq-expanded}{
    @include makeCol(_lg, $columns);
    @include makeOff(_lg, $columns);
}

@media #{$gl-mq-large}{
    @include makeCol(_md, $columns);
    @include makeOff(_md, $columns);
}

@media #{$gl-mq-medium}{
    @include makeCol(_sm, $columns);
    @include makeOff(_sm, $columns);
}
*/
